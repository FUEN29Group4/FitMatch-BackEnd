@model X.PagedList.IPagedList<FitMatch_BackEnd.ViewModel.OrderViewModel>
@using X.PagedList.Mvc;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "List";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
}

<style>
    span {
        display: inline-block;
        white-space: nowrap;
    }
</style>

<!-- Content Start -->
<div class="content">
    <!-- Navbar Start -->
    <nav class="navbar navbar-expand bg-secondary navbar-dark sticky-top px-4 py-0">
        <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
            <h1 class="pt-2" style="color: #F24B88!important;">M</h1>
        </a>
        <a href="#" class="sidebar-toggler flex-shrink-0">
            <i class="fa fa-bars"></i>
        </a>
        <form class="d-none d-md-flex ms-4">
            <h4 class="m-auto">訂單管理</h4>
        </form>
        <div class="navbar-nav align-items-center ms-auto">
            <div class="nav-item dropdown">
                <a href="#" class="nav-link">
                    <i class="fa-solid fa-gear"></i>
                    <span class="d-none d-lg-inline-flex">設定</span>
                </a>
                
            </div>
            <div class="nav-item dropdown">
                <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                    <i class="fa fa-bell me-lg-2"></i>
                    <span class="d-none d-lg-inline-flex">通知</span>
                </a>
                <div class="dropdown-menu dropdown-menu-end bg-secondary border-0 rounded-0 rounded-bottom m-0">
                    <a href="#" class="dropdown-item">
                        <h6 class="fw-normal mb-0">Profile updated</h6>
                        <small>15 minutes ago</small>
                    </a>
                    <hr class="dropdown-divider">
                    <a href="#" class="dropdown-item">
                        <h6 class="fw-normal mb-0">New user added</h6>
                        <small>15 minutes ago</small>
                    </a>
                    <hr class="dropdown-divider">
                    <a href="#" class="dropdown-item">
                        <h6 class="fw-normal mb-0">Password changed</h6>
                        <small>15 minutes ago</small>
                    </a>
                    <hr class="dropdown-divider">
                    <a href="#" class="dropdown-item text-center">See all notifications</a>
                </div>
            </div>
            <div class="nav-item dropdown">
                <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
                    <img class="rounded-circle me-lg-2" src="~/img/員工/02627af6-2503-42cc-8ea7-5a69773dadd6.jpg" alt=""
                         style="width: 40px; height: 40px;">
                    <span class="d-none d-lg-inline-flex">揚庭</span>
                </a>
                <div class="dropdown-menu dropdown-menu-end bg-secondary border-0 rounded-0 rounded-bottom m-0">
                    <a href="#" class="dropdown-item">My Profile</a>
                    <a href="#" class="dropdown-item">Settings</a>
                    <a href="#" class="dropdown-item">Log Out</a>
                </div>
            </div>
        </div>
    </nav>
    <!-- Navbar End -->
    <!-- 篩選列開始 -->
    <div class="container-fluid pt-4 px-4">
        <nav class="navbar navbar-expand-lg bg-white rounded py-4 px-2">
            @*<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
            </button>*@

            <!-- 課程日期 -->
            <div class="col-4 d-flex align-items-center me-4" style="margin-left: 25px;">
                <span style="margin-right: 10px; text-align: center;">付款日期:</span>
                <input class="form-select me-2" style="background-color:#fff;" type="date" name="start" id="start"
                       value="@ViewBag.StartDate"> <!-- 使用 ViewBag 中的 StartDate 值 -->
                <span style="text-align: center;">至</span>
                <input class="form-select" style="background-color:#fff; margin-left: 10px;" type="date"
                       name="end" id="end" value="@ViewBag.EndDate"> <!-- 使用 ViewBag 中的 EndDate 值 -->
            </div>

            <!-- 運送方式 -->
            <div class="col-2 d-flex align-items-center ms-4">
                <span style="margin-right: 10px; text-align: center;">運送方式</span>
                <select id="ShippingMethodFilter" class="form-select" style="background-color: #fff;" aria-label="課程狀態">

                    <option value="">全部</option>
                    <option value="宅配">宅配</option>
                    <option value="超商">超商</option>
                </select>
            </div>
            <!-- 運送方式 -->
            <div class="col-2 d-flex align-items-center ms-4">
                <span style="margin-right: 10px; text-align: center;">付款方式</span>
                <select id="PaymentMethodFilter" class="form-select" style="background-color: #fff;" aria-label="課程狀態">

                    <option value="">全部</option>
                    <option value="信用卡">信用卡</option>
                    <option value="到貨付款">到貨付款</option>
                    <option value="LinePay">LinePay</option>
                    <option value="PayPal">PayPal</option>

                </select>
            </div>

            <!-- 篩選條件 -->
            <div class="col-3 d-flex align-items-center ms-4" style="margin-right: 25px;">
                <form class="custom-select input-group" id="searchForm" method="get" action="List">

                    <select name="searchField" class="input-group-text" style="color:#696969">
                        <option value="OrderId">訂單編號</option>
                        <option value="MemberName">會員名稱</option>
                    </select>
                    <input id="searchInput" type="text" name="searchKeyword" class="form-control" style="border-radius:0 5px 5px 0">
                    <button type="button" id="combinedSearchButton" class="btn p-0 ps-2 me-2">
                        <i class="fa-solid fa-magnifying-glass fa-xl"></i>
                    </button>
                    <div>
                        <button type="reset" class="btn btn-outline-success">清空</button>
                    </div>
                </form>
            </div>
        </nav>
    </div>
    
    <!-- 管理列表開始 -->
    <div class="container-fluid pt-4 px-4">
        <div class="bg-white text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h5 class="mb-0 text-dark">訂單列表</h5>
                @* <a class="btn btn-primary  custom-purple" href="#">新增訂單</a> *@
            </div>
            <div class="table-responsive">
                <table class="table text-center align-middle table-bordered table-hover mb-0">
                    <thead style="background-color: #74ffba;">
                        <tr class="text-dark">
                            <th scope="col" style="min-width: 80px;">訂單編號</th>
                            <th scope="col" style="min-width: 80px;">會員編號</th>
                            <th scope="col" style="min-width: 80px;">會員姓名</th>
                            <th scope="col" style="min-width: 80px;">訂單總價</th>
                            <th scope="col" style="min-width: 80px;">支付方式</th>
                            <th scope="col" style="min-width: 80px;">運送方式</th>
                            <th scope="col">訂單時間</th>
                            <th scope="col" style="min-width: 80px;">操作</th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                           
                            foreach (var item in Model)
                            {
                                
                                <tr class="data-row">
                                    <td>@item.OrderId</td>
                                    <td>@item.MemberId</td>
                                    <td>@item.MemberName</td>
                                    <td>@item.TotalPrice</td>
                                    <td>@item.PaymentMethod</td>
                                    <td>@item.ShippingMethod</td>
                                    <td>@item.OrderTime</td>

                                    <td>
                                        <a href="@Url.Action("OrderDetails", "Order", new { id = item.OrderId })" class="btn btn-secondary"
                                           style="background-color: aliceblue; color: black;">
                                            查看明細
                                        </a>
                                      
                                        <a class="btn btn-primary" href="@Url.Action(" Delete", "Order" , new { id=item.OrderId })">
                                            <i class="fa-solid fa-trash-can">刪除</i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-end pt-4">
                <!-- 換頁區塊開始 -->
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link previous-page" data-page-type="previous" href="@Url.Action("List", new { currentPage = ViewBag.CurrentPage - 1 })">
                                <i class="fa-solid fa-chevron-left"></i>
                            </a>
                        </li>

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" id="@("page-" + i)" data-page="@i" data-page-type="number" href="@Url.Action("List", new { currentPage = i })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link next-page" data-page-type="next" href="@Url.Action("List", new { currentPage = ViewBag.CurrentPage + 1 })">
                                <i class="fa-solid fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- 換頁區塊END -->
            </div>
            <!-- 最下面END -->
        </div>

    </div>
    <!-- 管理列表結束 -->
</div>
<!-- Content End -->
<!-- JQ -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script>
    // 篩選選項和按鈕的 DOM 元素
    const ShippingMethodFilter = document.getElementById('ShippingMethodFilter');
    const PaymentMethodFilter = document.getElementById('PaymentMethodFilter');
    const searchForm = document.getElementById('searchForm');
    const pageLinks = document.querySelectorAll('.page-link'); // 所有分頁按鈕的 DOM 元素
    const startDateInput = document.querySelector('input[name="start"]');
    const endDateInput = document.querySelector('input[name="end"]');

    // 初始化篩選條件
    const params = new URLSearchParams(window.location.search);
    if (params.has('ShippingMethod')) {
        const ShippingMethod = params.get('ShippingMethod');
        ShippingMethodFilter.value = ShippingMethod;
    }
    if (params.has('PaymentMethod')) {
        const PaymentMethod = params.get('PaymentMethod');
        PaymentMethodFilter.value = PaymentMethod;
    }


    // 監聽篩選選項的變化
    ShippingMethodFilter.addEventListener('change', function () {
        updateFiltersAndPage(1); // 將當前頁碼設為 1
    });
    // 監聽篩選選項的變化
    PaymentMethodFilter.addEventListener('change', function () {
        updateFiltersAndPage(1); // 將當前頁碼設為 1
    });

    // 監聽表單的提交事件，避免頁面重新加載
    searchForm.addEventListener('submit', function (e) {
        e.preventDefault();
        updateFiltersAndPage(1); // 將當前頁碼設為 1
    });

    // 監聽分頁按鈕的點擊事件
    pageLinks.forEach(link => {
        link.addEventListener('click', function (e) {
            e.preventDefault();
            const newPage = parseInt(this.getAttribute('data-page'));
            updateFiltersAndPage(newPage);
        });
    });

    // 初始化日期選擇器的值
    const startDateParam = params.get('start');
    const endDateParam = params.get('end');
    if (startDateParam !== null) {
        startDateInput.value = startDateParam;
    }
    if (endDateParam !== null) {
        endDateInput.value = endDateParam;
    }

    // 當兩個日期選擇器的值都改變時，觸發篩選
    startDateInput.addEventListener('change', handleDateChange);
    endDateInput.addEventListener('change', handleDateChange);

    function handleDateChange() {
        if (startDateInput.value && endDateInput.value) {
            updateFiltersAndPage(getCurrentPage());
        }
    }

    // 更新篩選條件並修改 URL，然後換頁
    function updateFiltersAndPage(pageNumber) {
        const startValue = startDateInput.value; // 開始日期值
        const endValue = endDateInput.value;     // 結束日期值

        const selectedShippingMethod = ShippingMethodFilter.value;
        const selectedPaymentMethod = PaymentMethodFilter.value;
        const searchField = document.querySelector('select[name="searchField"]').value;
        const searchKeyword = document.getElementById('searchInput').value;

        const currentParams = new URLSearchParams(window.location.search);

        // 更新篩選條件參數
        currentParams.set('ShippingMethod', selectedShippingMethod);
        currentParams.set('PaymentMethod', selectedPaymentMethod);
        currentParams.set('searchField', searchField);
        currentParams.set('searchKeyword', searchKeyword);
        currentParams.set('start', startValue); // 更新開始日期
        currentParams.set('end', endValue);     // 更新結束日期

        // 保留原有的分頁參數
        currentParams.set('currentPage', pageNumber);

        const currentUrl = new URL(window.location);
        currentUrl.search = currentParams.toString();

        // 將更新的 URL 設置為新的頁面位置
        window.location.href = currentUrl.toString();
    }

    // 在页面加载时设置 select 的选中值和输入框的值
    window.addEventListener('load', function () {
        const params = new URLSearchParams(window.location.search);
        if (params.has('searchField')) {
            const searchField = params.get('searchField');
            const searchFieldSelect = document.querySelector('select[name="searchField"]');
            searchFieldSelect.value = searchField;
        }

        if (params.has('searchKeyword')) {
            const searchKeyword = params.get('searchKeyword');
            const searchInput = document.getElementById('searchInput');
            searchInput.value = searchKeyword;
        }
    });


    // 獲取當前分頁參數
    function getCurrentPage() {
        const params = new URLSearchParams(window.location.search);
        if (params.has('currentPage')) {
            return params.get('currentPage');
        }
        return 1; // 如果沒有分頁參數，預設為第 1 頁
    }

    // 監聽清空按鈕的點擊事件
    const clearButton = document.querySelector('#searchForm button[type="reset"]');
    clearButton.addEventListener('click', function () {
        const searchFieldSelect = document.querySelector('select[name="searchField"]');
        const searchInput = document.getElementById('searchInput');
        // 重置日期輸入
        startDateInput.value = '';
        endDateInput.value = '';
        // 重置篩選條件
        ShippingMethodFilter.value = '';
        PaymentMethodFilter.value = '';
        searchFieldSelect.value = 'OrderId';
        searchInput.value = '';

        // 觸發篩選並跳轉到第一頁
        updateFiltersAndPage(1);
    });

    // 監聽另一個按鈕的點擊事件
    const combinedSearchButton = document.getElementById('combinedSearchButton');
    combinedSearchButton.addEventListener('click', function () {
        const searchFieldSelect = document.querySelector('select[name="searchField"]');
        const searchInput = document.getElementById('searchInput');
        const startInput = document.getElementById('start');
        const endInput = document.getElementById('end');

        // 獲取選擇的日期值
        const startValue = startInput.value;
        const endValue = endInput.value;

        // 獲取其他篩選條件值
        const selectedShippingMethod = ShippingMethodFilter.value;
        const selectedPaymentMethod = PaymentMethodFilter.value;
        const searchField = searchFieldSelect.value;
        const searchKeyword = searchInput.value;

        // 更新 URL 參數並進行篩選
        const currentParams = new URLSearchParams(window.location.search);
        currentParams.set('ShippingMethod', selectedShippingMethod);
        currentParams.set('PaymentMethod', selectedPaymentMethod);
        currentParams.set('searchField', searchField);
        currentParams.set('searchKeyword', searchKeyword);
        currentParams.set('start', startValue);
        currentParams.set('end', endValue);

        const currentUrl = new URL(window.location);
        currentUrl.search = currentParams.toString();

        // 將更新的 URL 設置為新的頁面位置，並跳轉到第一頁
        window.location.href = currentUrl.toString() + '&currentPage=1';
    });

</script>
@*<script>

  

    // 換頁效果 (另一種寫法)
    document.addEventListener("DOMContentLoaded", function () {
        const table = document.querySelector(".table");
        const pageLinks = document.querySelectorAll(".page-link[data-page-type='number']");
        const prevPageLink = document.querySelector(".previous-page");
        const nextPageLink = document.querySelector(".next-page");
        const rows = table.querySelectorAll("tbody tr");
        const perPage = 5;

        function updateTableContent(page) {
            const startIndex = (page - 1) * perPage;
            const endIndex = startIndex + perPage;

            rows.forEach((row, index) => {
                if (index >= startIndex && index < endIndex) {
                    row.style.display = "table-row";
                } else {
                    row.style.display = "none";
                }
            });
        }

        function switchPage(delta) {
            const activeLink = document.querySelector(".page-item.active .page-link");
            if (activeLink) {
                const currentPage = parseInt(activeLink.textContent);
                const newPage = currentPage + delta;

                if (newPage >= 1 && newPage <= pageLinks.length) {
                    pageLinks[newPage - 1].click();
                }
            }
        }

        pageLinks.forEach(link => {
            link.addEventListener("click", function (event) {
                event.preventDefault();
                const page = parseInt(this.textContent);

                pageLinks.forEach(l => l.parentElement.classList.remove("active"));
                this.parentElement.classList.add("active");
                updateTableContent(page);
            });
        });

        prevPageLink.addEventListener("click", function (event) {
            event.preventDefault();
            switchPage(-1);
        });

        nextPageLink.addEventListener("click", function (event) {
            event.preventDefault();
            switchPage(1);
        });

        // Initialize by showing the content of the first page
        updateTableContent(1);
    });


</script>*@