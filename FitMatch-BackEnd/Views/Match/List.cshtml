@model X.PagedList.IPagedList<FitMatch_BackEnd.ViewModel.MatchViewModel>
<!-- 显示分页控件 -->
<!-- 在视图中使用 pagedData 模型来显示数据和分页控件 -->
@using X.PagedList.Mvc;
@using X.PagedList;
@using X.PagedList.Mvc.Core;



@{
    ViewData["Title"] = "List";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;

}
<style>
    /* 編輯預約樣式 */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.7);
    }

    .modal-content {
        position: absolute;
        top: 50%;
        left: 50%;
        max-width: 500px;
        transform: translate(-50%, -50%);
        background-color: #fff;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        text-align: left;
    }

    .close-btn {
        position: absolute;
        top: 5px;
        right: 10px;
        cursor: pointer;
        font-size: 25px;
    }

    .modal form {
        display: grid;
        gap: 10px;
    }

    .modal button {
        margin: 0 auto;
    }

    .modal .form-x:focus {
        background-color: #e9ecef;
        opacity: 1;
        border: 1px solid #000;
    }

    .modal .row {
        margin-bottom: 15px;
    }

    .modal label {
        margin-bottom: 0;
        /* Reset Bootstrap's margin-bottom on labels */
    }

    span {
        display: inline-block;
        white-space: nowrap;
    }

    /* 自定义的类选择器 */
    .custom-select {
        border-radius: 5px;
        color: #696969;
        padding: 5px;
    }

    .custom-input {
        border-radius: 5px;
        color: #696969;
        padding: 5px;
    }

    .custom-select option {
        color: #696969; /* 修改选项的字体颜色 */
    }

    .btn-secondary {
        background-color: aliceblue;
        color: black;
    }
</style>
    <!-- 篩選列開始 -->
    <div class="container-fluid pt-4 px-4">
        <nav class="navbar navbar-expand-lg bg-white rounded">
            @*<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
            data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent"
            aria-expanded="false" aria-label="Toggle navigation">
            </button>*@

            <!-- 課程日期 -->
            <div class="col-4 d-flex align-items-center me-4" style="margin-left: 25px;">
                <span style="margin-right: 10px; text-align: center;">課程日期:</span>
                <input class="form-select me-2" style="background-color:#fff;" type="date" name="start" id="start"
                       value="@ViewBag.StartDate"> <!-- 使用 ViewBag 中的 StartDate 值 -->
                <span style="text-align: center;">至</span>
                <input class="form-select" style="background-color:#fff; margin-left: 10px;" type="date"
                       name="end" id="end" value="@ViewBag.EndDate"> <!-- 使用 ViewBag 中的 EndDate 值 -->
            </div>

            <!-- 課程狀態 -->
            <div class="col-3 d-flex align-items-center ms-4">
                <span style="margin-right: 10px; text-align: center;">課程狀態:</span>
                <select id="CourseStatusFilter" class="form-select" style="background-color: #fff;" aria-label="課程狀態">

                    <option value="">全部</option>
                    <option value="進行中">進行中</option>
                    <option value="已完成">已完成</option>
                </select>
            </div>

            <!-- 篩選條件 -->
            <div class="col-4 d-flex align-items-center ms-4" style="margin-right: 25px;">
                <form class="custom-select input-group" id="searchForm" method="get" action="List">

                    <select name="searchField" class="input-group-text" style="color:#696969">
                        <option value="ClassName">課程名稱</option>
                        <option value="MemberName">會員名稱</option>
                        <option value="TrainerName">教練名稱</option>
                        <option value="GymName">場館名稱</option>
                    </select>
                    <input id="searchInput" type="text" name="searchKeyword" class="form-control" style="border-radius:0 5px 5px 0">
                    <button type="submit" id="combinedSearchButton" class="btn p-0 ps-2 me-2">
                        <i class="fa-solid fa-magnifying-glass fa-xl"></i>
                    </button>
                    <div>
                        <button type="reset" class="btn btn-outline-success">清空</button>
                    </div>
                </form>
            </div>
        </nav>
    </div>


    <div class="container-fluid pt-4 px-4">
        <div class="bg-white text-center rounded p-4">
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h5 class="mb-0 text-dark">預約列表</h5>
            </div>
            <div id="dataContainer" class="table-responsive">
                <table class="table text-center align-middle table-bordered table-hover mb-0">
                    <!-- 表頭開始 -->
                    <thead style="background-color: #74ffba;">
                        <tr class="text-dark">
                            <th scope="col" class="align-middle">預約編號</th>
                            <th scope="col" class="align-middle">教練</th>
                            <th scope="col" class="align-middle">會員</th>
                            <th scope="col" class="align-middle">場館</th>
                            <th scope="col" class="align-middle">課程狀態</th>
                            @*<th scope="col" class="align-middle">審核通過與否</th>*@
                            <th scope="col" class="align-middle">建立時間</th>
                            <th scope="col" class="align-middle">開始時間</th>
                            <th scope="col" class="align-middle">結束時間</th>
                            <th scope="col" class="align-middle">操作</th>
                        </tr>
                    </thead>
                    <!-- 表頭結束 -->
                    <!-- 表身開始 -->
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr class="data-row">
                                <td>@item.ClassId</td>
                                <td>@item.TrainerName</td>
                                <td>@item.MemberName</td>
                                <td>@item.GymName</td>
                                <td>@item.CourseStatus</td>
                               @* <td>
                                    @if (item.Approved)
                                    {
                                        <span>已通過</span>
                                    }
                                    else
                                    {
                                        <span>未通過</span>
                                    }
                                </td>*@
                                <td>@item.BuildTime</td>
                                <td>@item.StartTime</td>
                                <td>@item.EndTime</td>
                                <td>

                                    <a asp-action="Edit" asp-route-id="@item.ClassId" class="btn btn-sm btn-secondary me-2">
                                        <i class="fa-regular fa-pen-to-square">編輯</i>
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@item.ClassId" class="btn  btn-sm btn-primary" onclick="return confirm('確定要刪除這個項目嗎？');">
                                        <i class="fa-solid fa-trash-can"></i>刪除
                                    </a>

                                </td>
                            </tr>
                        }
                    </tbody>
                    <!-- 表身結束 -->
                </table>
            </div>






            <div class="d-flex justify-content-end pt-4">
                <!-- 換頁區塊開始 -->
                <nav aria-label="Page navigation example">
                    <ul class="pagination">
                        <li class="page-item @(ViewBag.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link previous-page" data-page-type="previous" href="@Url.Action("List", new { currentPage = ViewBag.CurrentPage - 1 })">
                                <i class="fa-solid fa-chevron-left"></i>
                            </a>
                        </li>

                        @for (int i = 1; i <= ViewBag.TotalPages; i++)
                        {
                            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                <a class="page-link" id="@("page-" + i)" data-page="@i" data-page-type="number" href="@Url.Action("List", new { currentPage = i })">
                                    @i
                                </a>
                            </li>
                        }

                        <li class="page-item @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">
                            <a class="page-link next-page" data-page-type="next" href="@Url.Action("List", new { currentPage = ViewBag.CurrentPage + 1 })">
                                <i class="fa-solid fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <!-- 換頁區塊END -->
            </div>

        </div>
    </div>


    <!-- 最下面END -->


<!-- 管理列表結束 -->







<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>



<script>
    //放置標題
    document.addEventListener('DOMContentLoaded', function () {
        var textElement = document.getElementById('TitleName');
        textElement.innerHTML = '媒合預約管理';
    });
    // 篩選選項和按鈕的 DOM 元素
    const courseStatusFilter = document.getElementById('CourseStatusFilter');
    const searchForm = document.getElementById('searchForm');
    const pageLinks = document.querySelectorAll('.page-link'); // 所有分頁按鈕的 DOM 元素
    const startDateInput = document.querySelector('input[name="start"]');
    const endDateInput = document.querySelector('input[name="end"]');

    // 初始化篩選條件
    const params = new URLSearchParams(window.location.search);
    if (params.has('courseStatus')) {
        const courseStatus = params.get('courseStatus');
        courseStatusFilter.value = courseStatus;
    }

    // 監聽篩選選項的變化
    courseStatusFilter.addEventListener('change', function () {
        updateFiltersAndPage(1); // 將當前頁碼設為 1
    });

    // 監聽表單的提交事件，避免頁面重新加載
    searchForm.addEventListener('submit', function (e) {
        e.preventDefault();
        updateFiltersAndPage(1); // 將當前頁碼設為 1
    });

    // 監聽分頁按鈕的點擊事件
    pageLinks.forEach(link => {
        link.addEventListener('click', function (e) {
            e.preventDefault();
            const newPage = parseInt(this.getAttribute('data-page'));
            updateFiltersAndPage(newPage);
        });
    });

    // 初始化日期選擇器的值
    const startDateParam = params.get('start');
    const endDateParam = params.get('end');
    if (startDateParam !== null) {
        startDateInput.value = startDateParam;
    }
    if (endDateParam !== null) {
        endDateInput.value = endDateParam;
    }

    // 當兩個日期選擇器的值都改變時，觸發篩選
    startDateInput.addEventListener('change', handleDateChange);
    endDateInput.addEventListener('change', handleDateChange);

    function handleDateChange() {
        if (startDateInput.value && endDateInput.value) {
            updateFiltersAndPage(getCurrentPage());
        }
    }

    // 更新篩選條件並修改 URL，然後換頁
    function updateFiltersAndPage(pageNumber) {
        const startValue = startDateInput.value; // 開始日期值
        const endValue = endDateInput.value;     // 結束日期值

        const selectedCourseStatus = courseStatusFilter.value;
        const searchField = document.querySelector('select[name="searchField"]').value;
        const searchKeyword = document.getElementById('searchInput').value;

        const currentParams = new URLSearchParams(window.location.search);

        // 更新篩選條件參數
        currentParams.set('courseStatus', selectedCourseStatus);
        currentParams.set('searchField', searchField);
        currentParams.set('searchKeyword', searchKeyword);
        currentParams.set('start', startValue); // 更新開始日期
        currentParams.set('end', endValue);     // 更新結束日期

        // 保留原有的分頁參數
        currentParams.set('currentPage', pageNumber);

        const currentUrl = new URL(window.location);
        currentUrl.search = currentParams.toString();

        // 將更新的 URL 設置為新的頁面位置
        window.location.href = currentUrl.toString();
    }

    // 在页面加载时设置 select 的选中值和输入框的值
    window.addEventListener('load', function () {
        const params = new URLSearchParams(window.location.search);
        if (params.has('searchField')) {
            const searchField = params.get('searchField');
            const searchFieldSelect = document.querySelector('select[name="searchField"]');
            searchFieldSelect.value = searchField;
        }

        if (params.has('searchKeyword')) {
            const searchKeyword = params.get('searchKeyword');
            const searchInput = document.getElementById('searchInput');
            searchInput.value = searchKeyword;
        }
    });


    // 獲取當前分頁參數
    function getCurrentPage() {
        const params = new URLSearchParams(window.location.search);
        if (params.has('currentPage')) {
            return params.get('currentPage');
        }
        return 1; // 如果沒有分頁參數，預設為第 1 頁
    }

    // 監聽清空按鈕的點擊事件
    const clearButton = document.querySelector('#searchForm button[type="reset"]');
    clearButton.addEventListener('click', function () {
        const searchFieldSelect = document.querySelector('select[name="searchField"]');
        const searchInput = document.getElementById('searchInput');
        // 重置日期輸入
        startDateInput.value = '';
        endDateInput.value = '';
        // 重置篩選條件
        courseStatusFilter.value = '';
        searchFieldSelect.value = 'ClassName';
        searchInput.value = '';

        // 觸發篩選並跳轉到第一頁
        updateFiltersAndPage(1);
    });

    // 監聽另一個按鈕的點擊事件
    const combinedSearchButton = document.getElementById('combinedSearchButton');
    combinedSearchButton.addEventListener('click', function () {
        const searchFieldSelect = document.querySelector('select[name="searchField"]');
        const searchInput = document.getElementById('searchInput');
        const startInput = document.getElementById('start');
        const endInput = document.getElementById('end');

        // 獲取選擇的日期值
        const startValue = startInput.value;
        const endValue = endInput.value;

        // 獲取其他篩選條件值
        const selectedCourseStatus = courseStatusFilter.value;
        const searchField = searchFieldSelect.value;
        const searchKeyword = searchInput.value;

        // 更新 URL 參數並進行篩選
        const currentParams = new URLSearchParams(window.location.search);
        currentParams.set('courseStatus', selectedCourseStatus);
        currentParams.set('searchField', searchField);
        currentParams.set('searchKeyword', searchKeyword);
        currentParams.set('start', startValue);
        currentParams.set('end', endValue);

        const currentUrl = new URL(window.location);
        currentUrl.search = currentParams.toString();

        // 將更新的 URL 設置為新的頁面位置，並跳轉到第一頁
        window.location.href = currentUrl.toString() + '&currentPage=1';
    });

</script>













@*<script>
    var matchListUrl = '@Url.Action("List", "Match")';
    var currentPage = @ViewBag.CurrentPage;
    var totalPages = @ViewBag.TotalPages;

    // 在頁面載入時從本地存儲中恢復篩選條件
    window.addEventListener('load', function () {
        var savedStartDate = localStorage.getItem('startDate');
        var savedEndDate = localStorage.getItem('endDate');
        var savedCourseStatus = localStorage.getItem('courseStatus');
        var savedSearchField = localStorage.getItem('searchField');
        var savedSearchKeyword = localStorage.getItem('searchKeyword');

        if (savedStartDate) {
            document.querySelector('input[name="start"]').value = savedStartDate;
        }
        if (savedEndDate) {
            document.querySelector('input[name="end"]').value = savedEndDate;
        }
        if (savedSearchField) {
            document.querySelector('select[name="searchField"]').value = savedSearchField;
        }
        if (savedSearchKeyword) {
            document.getElementById("searchInput").value = savedSearchKeyword;
        }
        if (savedCourseStatus) {
            if (savedCourseStatus !== "__placeholder__") { // 不是 "請選擇" 提示
                document.getElementById("CourseStatusFilter").value = savedCourseStatus;
                applyFilters();
            }
        }
    });

    // 生成分頁 URL
    function generatePageUrl(page) {
        var startDate = encodeURIComponent(document.querySelector('input[name="start"]').value);
        var endDate = encodeURIComponent(document.querySelector('input[name="end"]').value);
        var courseStatus = encodeURIComponent(document.getElementById("CourseStatusFilter").value);
        var searchField = encodeURIComponent(document.querySelector('select[name="searchField"]').value);
        var searchKeyword = encodeURIComponent(document.getElementById("searchInput").value);

        var url = matchListUrl +
            "?currentPage=" + page +
            "&start=" + startDate +
            "&end=" + endDate +
            "&courseStatus=" + courseStatus +
            "&searchField=" + searchField +
            "&searchKeyword=" + searchKeyword;

        return url;
    }

    // 點擊上一頁按鈕
    document.querySelector(".previous-page").addEventListener("click", function (event) {
        event.preventDefault();

        if (currentPage > 1) {
            window.location.href = generatePageUrl(currentPage - 1);
        }
    });

    // 點擊下一頁按鈕
    document.querySelector(".next-page").addEventListener("click", function (event) {
        event.preventDefault();

        if (currentPage < totalPages) {
            window.location.href = generatePageUrl(currentPage + 1);
        }
    });

    // 點擊數字頁碼按鈕
    var pageLinks = document.querySelectorAll(".page-link[data-page-type='number']");
    pageLinks.forEach(link => {
        link.addEventListener("click", function (event) {
            event.preventDefault();
            var pageNumber = parseInt(link.getAttribute("data-page"));
            window.location.href = generatePageUrl(pageNumber);
        });
    });

    // 監聽篩選變更事件
    document.getElementById("CourseStatusFilter").addEventListener("change", applyFilters);
    document.getElementById("combinedSearchButton").addEventListener("click", applyFilters);

    // 應用篩選條件
    function applyFilters() {
        var selectedValue = document.getElementById("CourseStatusFilter").value;

        if (selectedValue !== "__placeholder__") {
            // 取得篩選條件
            var startDate = document.querySelector('input[name="start"]').value;
            var endDate = document.querySelector('input[name="end"]').value;
            var courseStatus = selectedValue;
            var searchField = document.querySelector('select[name="searchField"]').value;
            var searchKeyword = document.getElementById("searchInput").value;

            // 發送 AJAX 請求
            $.ajax({
                url: generatePageUrl(1), // 將搜索條件應用於第一頁
                type: "GET",
                data: {
                    start: startDate,
                    end: endDate,
                    courseStatus: courseStatus,
                    searchField: searchField,
                    searchKeyword: searchKeyword
                },
                success: function (responseData) {
                    // 假設後端返回的資料是一個 JSON 對象，包含了要更新的資料
                    // 例如，responseData 可能是 { courses: [...], totalPages: ... }

                    // 假設您有一個 <div> 元素，用於顯示篩選後的課程資料
                    var coursesDiv = document.getElementById("courses");

                    // 假設 responseData.courses 是後端返回的課程資料陣列
                    // 將這些資料填充到頁面的 coursesDiv 元素中
                    coursesDiv.innerHTML = ""; // 先清空內容，以防重複填充
                    for (var i = 0; i < responseData.courses.length; i++) {
                        var course = responseData.courses[i];
                        var courseElement = document.createElement("div");
                        courseElement.textContent = course.name; // 假設課程名稱是 course 的一個屬性
                        coursesDiv.appendChild(courseElement);
                    }

                    // 更新總頁數
                    totalPages = responseData.totalPages; // 假設 totalPages 是後端返回的總頁數
                },
                error: function () {
                    // 處理請求失敗的情況
                }
            });
        }
    }

</script>*@








<!-- Content End -->
<!-- Back to Top -->
<!-- <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a> -->