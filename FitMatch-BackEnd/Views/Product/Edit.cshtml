@model FitMatch_BackEnd.Models.Product

@{
ViewData["Title"] = "Edit";
}

<link rel="stylesheet" href="css/personnel/revise.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<style>
    /* 上傳照片 */
    .upload-container {
        width: 100%;
        min-height: 400px;
        border: 1px solid #000;
        position: relative;
        overflow: hidden;
        border-radius: 5px;
        background-color: #E0E0E0;
    }

    .label-upload {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        height: 100%;
        position: absolute;
        cursor: pointer;
    }

    .icon {
        font-size: 2em;
    }

    .upload-input {
        display: none;
    }

    #preview {
        max-width: 100%;
        max-height: 100%;
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
</style>


<!-- Form Start -->
<div class="container-fluid pt-4 px-4">
    <div class="row g-4">
        <div class="col-sm-12">
            <div class="bg-secondary rounded h-100 p-4">

                <form method="post" asp-action="Edit" class="" style="padding: 50px;" enctype="multipart/form-data"
                    id="EditForm">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <input type="hidden" name="ProductId" value="@Model.ProductId">

                    <div class="col-sm-12 col-xl-6 mb-3 d-flex ps">
                        <div class="col-2">
                            <label asp-for="ProductId" class="col-form-label" t1>商品編號</label>
                        </div>
                        <div class="col-10">
                            <label asp-for="ProductId" class="col-form-label  t1" value="ProductId">
                                @Model.ProductId</label>
                        </div>
                    </div>


                    <div class="row-sm-12 row-lg-6 mb-3 d-flex ps">
                        <div class="col-1">
                            <label for="TypeId" class="me-2">商品類別:</label>
                        </div>
                        <div class="col-4">
                            <select asp-for="TypeId" class="form-select" style="background-color: #fff;"
                                aria-label="商品類別">
                                <option value="" selected disabled hidden>請選擇商品類別</option>
                                <option value="1">雞胸肉</option>
                                <option value="2">保健品</option>
                                <option value="3">乳清蛋白</option>
                                <option value="4">補劑</option>
                            </select>
                        </div>
                    </div>

                    <div class="row-sm-12 row-lg-6 mb-3 d-flex ps">
                        <div class="col-1">
                            <label asp-for="ProductName" for="inputname" class="col-form-label">商品名稱</label>
                        </div>
                        <div class="col-4">
                            <input asp-for="ProductName" data-validate="ProductName" class="form-control mb-3"
                                type="text" placeholder="這裡會帶入商品名稱" aria-label="這裡會帶入商品名稱" id="inputProductName">
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- 現有照片預覽 -->
                    <div class="col-sm-12 col-xl-6 mb-3">
                        <div class="card">
                            <div class="card-header d-flex justify-content-center">
                                現有封面照片
                            </div>
                            <div class="card-body d-flex justify-content-center">
                                <img id="existingPreview" src="data:image/jpeg;base64,@Model.Photo"
                                    alt="Existing Image Preview" width="330" height="210">
                            </div>
                        </div>
                    </div>

                    <!-- 新照片上傳和預覽 -->
                    <div class="col-sm-12 col-xl-6 mb-3">
                        <div class="card">
                            <div class="card-header d-flex justify-content-center">
                                新封面照片
                            </div>
                            <div class="card-body d-flex flex-column align-items-center">
                                <!-- 預覽新上傳的照片 -->
                                <div class="d-flex justify-content-center">
                                    <img id="newPreview" src="" alt="New Image Preview" style="display:none;"
                                        width="330" height="210">
                                </div>
                                <!-- 上傳按鈕 -->
                                <div class="d-flex justify-content-center mt-3 w-100">
                                    <input type="file" id="FileToUpload" name="FileToUpload" accept="image/*"
                                        onchange="previewNewImage(event)">
                                </div>
                                <!-- 用於存放Base64字串的隱藏輸入框 -->
                                <input type="hidden" id="base64Image" name="base64Image">
                            </div>
                        </div>
                    </div>





                    <div class="row-sm-12 row-lg-6 mb-3 d-flex ps">
                        <div class="col-1">
                            <label asp-for="ProductDescription" for="inputProductDescription"
                                class="col-form-label">商品描述</label>
                        </div>
                        <div class="col-4">
                            <textarea asp-for="ProductDescription" data-validate="ProductDescription"
                                data-error-message="商品描述是必填的" class="form-control" placeholder="Leave a comment here"
                                id="inputProductDescription" style="height: 200px;"></textarea>
                        </div>
                    </div>

                    <div class="row-sm-12 row-lg-6 mb-3 d-flex ps">
                        <div class="col-1">
                            <label asp-for="Price" for="inputprice" class="col-form-label">價格</label>
                        </div>
                        <div class="col-4">
                            <input asp-for="Price" class="form-control mb-3" type="text" placeholder="這裡會帶入價格"
                                aria-label="這裡會帶入價格" id="inputprice">
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="row-sm-12 row-lg-6 mb-3 d-flex ps">
                        <div class="col-1">
                            <label asp-for="ProductInventory" for="inputinventory" class="col-form-label">商品庫存</label>
                        </div>
                        <div class="col-4">
                            <input asp-for="ProductInventory" class="form-control mb-3" type="text"
                                placeholder="這裡會帶入商品庫存" aria-label="這裡會帶入商品庫存" id="inputinventory">
                            <span asp-validation-for="ProductInventory" class="text-danger"></span>
                        </div>
                    </div>


                    <fieldset class="col-sm-12 col-xl-6 mb-3 d-flex">
                        <div class="col-2">
                            <legend class="col-form-label pt-0 pe-4">上架狀態</legend>
                        </div>
                        <div class="col-10 d-flex justify-content-start">
                            <div class="form-check me-3">
                                <input class="form-check-input" type="radio" name="Status" id="gridRadios1" value="true"
                                    @(Model.Status==true ? "checked" : "" )>
                                <label class="form-check-label" for="gridRadios1">
                                    上架
                                </label>
                            </div>
                            <div class="form-check me-3">
                                <input class="form-check-input" type="radio" name="Status" id="gridRadios2"
                                    value="false" @(Model.Status==false ? "checked" : "" )>
                                <label class="form-check-label" for="gridRadios2">
                                    下架
                                </label>
                            </div>
                        </div>
                    </fieldset>

                    <div class="col-8 d-flex text-center mx-auto pt-5">
                        <button type="submit" class="btn btn-primary me-5">修改</button>
                        <a asp-action="List" class="btn btn-outline-success ">取消</a>
                    </div>
                </form>
            </div>
        </div>

    </div>
</div>
<!-- Form End -->
@section Scripts {
@{
await Html.RenderPartialAsync("_ValidationScriptsPartial");
}
<script>

    //處理圖片上傳

    // function previewImage(event, previewElementId, hiddenInputId) {
    //     const file = event.target.files[0];
    //     if (file) {
    //         const reader = new FileReader();
    //         reader.onload = function (e) {
    //             // Set the image src for preview
    //             document.getElementById(previewElementId).src = e.target.result;

    //             // Store the base64 encoded image string in hidden input field
    //             if (hiddenInputId) {
    //                 document.getElementById(hiddenInputId).value = e.target.result;
    //             }
    //         }
    //         reader.readAsDataURL(file);
    //     }
    // }


    //放置標題
    document.addEventListener('DOMContentLoaded', function () {
        var textElement = document.getElementById('TitleName');
        textElement.innerHTML = '商品管理 / 編輯商品';
    });
    //
    function previewNewImage(event) {
        var reader = new FileReader();
        reader.onload = function () {
            var output = document.getElementById('newPreview');
            output.src = reader.result;
            output.style.display = 'block'; // 顯示新的預覽圖片
        }
        reader.readAsDataURL(event.target.files[0]);
    }

    // 確認按鈕的驗證

    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("EditForm");

        form.addEventListener("submit", async function (event) {
            event.preventDefault();

            // Validate all input fields
            let allValid = true;
            const elementsToValidate = document.querySelectorAll('[data-validate]');
            elementsToValidate.forEach(function (element) {
                if (!validate(element)) {
                    allValid = false;
                }
            });

            // If any validation failed, stop the form submission
            if (!allValid) {
                await Swal.fire({
                    icon: "error",
                    title: "驗證錯誤",
                    text: "請確認欄位是否符合正確格式",
                    confirmButtonText: "OK"
                });
                return;
            }

            // Perform form submission using AJAX or fetch
            try {
                const response = await fetch('/Product/Edit', {
                    method: "POST",
                    body: new FormData(form)
                });

                if (response.ok) {
                    // Show success message with confirm button
                    await Swal.fire({
                        icon: "success",
                        title: "修改成功",
                        text: "已成功修改一筆商品資料",
                        showConfirmButton: true,
                        confirmButtonText: "確認"
                    }).then(() => {
                        window.location.href = "/Product/List";
                    });
                } else {
                    throw new Error("表單提交失敗");
                }
            } catch (error) {
                // Show error message
                await Swal.fire({
                    icon: "error",
                    title: "錯誤",
                    text: error.message,
                    confirmButtonText: "OK"
                });
            }
        });
    });
    //以下是表單驗證
    //以下是表單驗證
    //以下是表單驗證

    // 顯示錯誤訊息
    function showErrorMessage(element, message) {
        let errorMessageElement = element.parentNode.querySelector('.error-message');
        if (!errorMessageElement) {
            errorMessageElement = document.createElement('span');
            errorMessageElement.className = 'error-message text-danger';
            element.parentNode.appendChild(errorMessageElement);
        }
        errorMessageElement.textContent = message;
    }

    // 清除錯誤訊息
    function clearErrorMessage(element) {
        const errorMessageElement = element.parentNode.querySelector('.error-message');
        if (errorMessageElement) {
            errorMessageElement.remove();
        }
    }


    //驗證函數
    function validate(element) {
        const validateRule = element.getAttribute('data-validate');
        const errorMessage = element.getAttribute('data-error-message');

        if (validateRule === 'required') {
            if (element.value === '') {
                showErrorMessage(element, errorMessage);
                return false;
            }
        }

        if (validateRule === 'ProductName') {
            if (element.value.length < 1 || element.value.length > 50) {
                showErrorMessage(element, "商品名稱應在1到50個字之間");
                return false;
            }
        }

        if (validateRule === 'ProductDescription') {
            if (element.value.length < 5 || element.value.length > 100) {
                showErrorMessage(element, "商品描述應在5到100個字之間");
                return false;
            }
        }

        if (validateRule === 'ProductInventory') {
            const regex = /^\d+$/;
            if (!regex.test(element.value) || parseInt(element.value) <= 0) {
                showErrorMessage(element, "數字不得小於等於0");
                return false;
            }
        }


        if (validateRule === 'Price') {
            const regex = /^\d+$/;

            if (!regex.test(element.value) || parseInt(element.value) <= 0) {
                showErrorMessage(element, "數字不得小於0");
                return false;
            }
        }
        clearErrorMessage(element);
        return true;
    }

    // 在輸入或失去焦點時觸發驗證
    const elementsToValidate = document.querySelectorAll('[data-validate]');
    elementsToValidate.forEach(function (element) {
        element.addEventListener('keyup', function () {
            clearBackendErrorMessage(this);
            validate(this);
        });
        element.addEventListener('blur', function () {
            clearBackendErrorMessage(this);
            validate(this);
        });
    });

    // 清除後端錯誤訊息
    function clearBackendErrorMessage(element) {
        const backendErrorMessageElement = element.parentNode.querySelector('.text-danger');
        if (backendErrorMessageElement) {
            backendErrorMessageElement.textContent = '';
        }
    }

    const uploadInput = document.getElementById('upload'); // 確保你有一個id為'upload'的input元素

    uploadInput.addEventListener('change', function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();

            reader.addEventListener('load', function () {
                const base64String = this.result;

                // 儲存base64String到隱藏的input元素中
                const hiddenInputElement = document.getElementById('base64Image');
                hiddenInputElement.value = base64String;

                // 顯示圖片
                const preview = document.getElementById('preview'); // 確保你有一個id為'preview'的img元素
                preview.src = base64String;
            });

            reader.readAsDataURL(file);
        }
    });


    const base64FromDatabase = "..."; // 這應該是從資料庫中讀取的值
    const imageElement = document.getElementById('yourImageElementId'); // 用你的img元素的ID替換
    imageElement.src = base64FromDatabase;

</script>
}